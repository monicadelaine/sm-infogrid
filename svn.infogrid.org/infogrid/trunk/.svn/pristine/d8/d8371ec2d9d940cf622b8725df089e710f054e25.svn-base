<html>
 <head>
  <title>The org.infogrid.module.servlet package</title>
 </head>
 <body>
  <p>Provides to the Module Framework a bootloader that is particularly suitable for
     JEE servlet environments.</p>
  <p><b>Important note:</b> In non-servlet environments, the InfoGrid Module Framework
     instantiates a separate ClassLoader for the JAR files of each Module. This allows
     Modules to depend on other Modules with conflicting class names without creating
     a run-time problem. Unfortunately, JEE does not really foresee the use of custom
     ClassLoaders. As a result, the servlet implementation of the InfoGrid Module Framework
     <em>does not</em> use custom ClassLoaders.</p>
  <p>In addition, the servlet environment also does not appear to all the enumeration
     of files in the current application. This means that the InfoGrid Module Framework
     is unable, in a servlet environment, to find all available Modules. It will only
     find those Modules that have been explicitly resolved by the application.</p>
  <p>It would of course be possible to circumvent those restrictions. However, that
     would almost certainly break JEE tool support, and we didn't want to do that.
 So you need to live with the restrictions.</p>
 </body>
</html>
