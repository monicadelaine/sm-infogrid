<html>
 <head>
  <title>Package org.infogrid.jee.taglib.util</title>
 </head>
 <body>
  <p>Utility tags.</p>
  <p>{@link org.infogrid.jee.taglib.util.NamedServletIncludeTag NamedServletIncludeTag} works similar
     to a <code>&lt;jsp:include&gt;</code> tag, but allows the specification of a named servlet, not a
     servlet path.</p>
  <p>The following tag attributes are provided:</p>
  <table class="infogrid-border">
   <thead>
    <tr>
     <th width="15%">Attribute</th>
     <th width="60%">Meaning</th>
     <th>Required?</th>
    </tr>
   </thead>
   <tbody>
    <tr>
     <td><code>servletName</code></td>
     <td>Name the servlet to include.</td>
     <td>required</td>
    </tr>
    <tr>
     <td><code>flush</code></td>
     <td>If true, flush output stream before including. Similar to the <code>flush</code> attribute on a
          <code>&lt;jsp:include&gt;</code> tag.</td>
    </tr>
   </tbody>
  </table>

  <p>@link org.infogrid.jee.taglib.util.RefreshTag RefreshTag} helps to generate a page refresh tag
     consistently.</p>
  <p>No tag attributes are provided.</p>

  <p>@link org.infogrid.jee.taglib.util.RotatingTrTag RotatingTrTag} enables the generation of
     different-colored rows in tables that are created using the <code>&lt;j:forEach&gt;</code> tag.</p>

  <p>The following tag attributes are provided:</p>
  <table class="infogrid-border">
   <thead>
    <tr>
     <th width="15%">Attribute</th>
     <th width="60%">Meaning</th>
     <th>Required?</th>
    </tr>
   </thead>
   <tbody>
    <tr>
     <td><code>varStatus</code></td>
     <td>Name of the bean that has been added into the context by the enclosing <code>&lt;j:forEach&gt;</code> tag.
         This should have the same value as its <code>varStatus</code> attribute. It is used by this tag
         to obtain positional information about the iteration.</td>
     <td>required</td>
    </tr>
    <tr>
     <td><code>htmlClasses</code></td>
     <td>List of HTML classes, separated by the (given or default) value of attribute <code>separator</code>,
         that will be assigned to table rows. The first HTML class is assigned to the first row in the table,
         the second to the second, and so forth. The (N+1)st row will use the first HTML class again.
         Additional htmlClasses may be assigned by virtue of attributes <code>firstRowHtmlClass</code>
         and <code>lastRowHtmlClass</code>.</td>
     <td>required</td>
    </tr>
    <tr>
     <td><code>separator</code></td>
     <td>The character String that acts as separators between the values in attribute <code>htmlClasses</code>.</td>
     <td>optional. Defaults to <code>,</code> (comma).</td>
    </tr>
    <tr>
     <td><code>firstRowHtmlClass</code></td>
     <td>If given, the HTML class name to be added to the set of classes of the first row in the iteration.</td>
     <td>optional</td>
    </tr>
    <tr>
     <td><code>lastRowHtmlClass</code></td>
     <td>If given, the HTML class name to be added to the set of classes of the last row in the iteration.</td>
     <td>optional</td>
    </tr>
   </tbody>
  </table>
 </body>
</html>
