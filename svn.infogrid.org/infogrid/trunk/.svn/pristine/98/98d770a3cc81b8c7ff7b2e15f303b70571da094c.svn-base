<html>
  <head>
    <title>Package org.infogrid.jee.taglib.logic</title>
  </head>
  <body>
   <p>Tags to conditionally evaluate a tag's content. For example, the
      {@link org.infogrid.jee.taglib.logic.MatchTag MatchTag}
      matches a <code>PropertyValue</code> against a regular expression. If there is a match,
      the content of the tag is processed; if not, the content of the tag is skipped.</p>

   <h1>Tags considering a <code>PropertyValue</code> as a boolean</h1>
   <p>{@link org.infogrid.jee.taglib.logic.IfTag IfTag} processes its content
      if a <code>PropertyValue</code> evaluates to <code>TRUE</code>.
      {@link org.infogrid.jee.taglib.logic.NotIfTag NotIfTag} processes its content
      if a <code>PropertyValue</code> evaluates to <code>FALSE</code>.</p>
   <p>A <code>PropertyValue</code> is considered to evaluate to <code>TRUE</code> if:</p>
   <ul>
    <li>the <code>PropertyValue</code> is a <code>BooleanValue</code> that evaluates to true, or</li>
    <li>the <code>PropertyValue</code> is not a <code>BooleanValue</code> and is not <code>null</code>.</li>
   </ul>
   <p>A <code>PropertyValue</code> is considered to evaluate to <code>FALSE</code> if:</p>
   <ul>
    <li>the <code>PropertyValue</code> is a <code>BooleanValue</code> that evaluates to false, or</li>
    <li>the <code>PropertyValue</code> is <code>null</code>.</li>
   </ul>
   <p>(This is similar to the use of values in C-language expressions)</p>
   <p>Either the attribute <code>propertyTypeName</code> or <code>propertyType</code> may be given;
      exactly one must be given. Attribute <code>propertyTypeName</code> contains the name of a bean
      that is the <code>PropertyType</code> to be used; attribute <code>propertyType</code> is a String
      with the name of the property.</p>
   <p>The following tag attributes are provided:</p>
   <table class="infogrid-border">
    <thead>
     <tr>
      <th width="15%">Attribute</th>
      <th width="60%">Meaning</th>
      <th>Required?</th>
     </tr>
    </thead>
    <tbody>
     <tr>
      <td><code>meshObjectName</code></td>
      <td>Name of the bean in the scope whose property is used in the condition. Must be a <code>MeshObject</code>.</td>
      <td>required</td>
     </tr>
     <tr>
      <td><code>propertyTypeName</code></td>
      <td>Name of the bean in the scope that identifies the property. Must be a <code>PropertyType</code>.</td>
      <td>mutually exclusive with <code>propertyType</code></td>
     </tr>
     <tr>
      <td><code>propertyType</code></td>
      <td>Name of the property. Must be a String.</td>
      <td>mutually exclusive with <code>propertyTypeName</code></td>
     </tr>
     <tr>
      <td><code>filter</code></td>
      <td>If true, filter output for characters that are sensitive in HTML.</td>
      <td>optional</td>
     </tr>
     <tr>
      <td><code>ignore</code></td>
      <td>If true, ignore missing beans and simply output nothing. Otherwise, when beans are missing,
          throw a <code>JspException</code></td>
      <td>optional</td>
     </tr>
     <tr>
      <td><code>scope</code></td>
      <td>The scope (page, request, session, application) in which beans are being looked up</td>
      <td>optional</td>
     </tr>
    </tbody>
   </table>   

   <h1>Tags testing equality of a <code>PropertyValue</code> with another <code>PropertyValue</code></h1>
   <p>{@link org.infogrid.jee.taglib.logic.EqualTag EqualTag} processes its content
       if a <code>PropertyValue</code> is equal to another <code>PropertyValue</code>.
       {@link org.infogrid.jee.taglib.logic.NotEqualTag NotEqualTag} processes its content
   if a <code>PropertyValue</code> is not equal to another <code>PropertyValue</code>.</p>
   
   <p>The following tag attributes are provided:</p>
   <table class="infogrid-border">
    <thead>
     <tr>
      <th width="15%">Attribute</th>
      <th width="60%">Meaning</th>
      <th>Required?</th>
     </tr>
    </thead>
    <tbody>
     <tr>
      <td><code>meshObjectName</code></td>
      <td>Name of the bean in the scope whose property is used in the condition. Must be a <code>MeshObject</code>.</td>
      <td>required</td>
     </tr>
     <tr>
      <td><code>propertyTypeName</code></td>
      <td>Name of the bean in the scope that identifies the property. Must be a <code>PropertyType</code>.</td>
      <td>mutually exclusive with <code>propertyType</code></td>
     </tr>
     <tr>
      <td><code>propertyType</code></td>
      <td>Name of the property. Must be a String.</td>
      <td>mutually exclusive with <code>propertyTypeName</code></td>
     </tr>
     <tr>
      <td><code>value</code></td>
      <td>String representation of the value against which the comparison is made.</td>
      <td>mutually exclusive with <code>valueName</code></td>
     </tr>
     <tr>
      <td><code>valueName</code></td>
      <td>Name of the bean in the scope against which the comparison is made.</td>
      <td>mutually exclusive with <code>value</code></td>
     </tr>
     <tr>
      <td><code>filter</code></td>
      <td>If true, filter output for characters that are sensitive in HTML.</td>
      <td>optional</td>
     </tr>
     <tr>
      <td><code>ignore</code></td>
      <td>If true, ignore missing beans and simply output nothing. Otherwise, when beans are missing,
          throw a <code>JspException</code></td>
      <td>optional</td>
     </tr>
     <tr>
      <td><code>scope</code></td>
      <td>The scope (page, request, session, application) in which beans are being looked up</td>
      <td>optional</td>
     </tr>
    </tbody>
   </table>

   <h1>Tags matching a <code>PropertyValue</code> against a regular expression</h1>
   <p>{@link org.infogrid.jee.taglib.logic.MatchTag MatchTag} processes its content
      if a <code>PropertyValue</code>'s String representation matches a regular expression.
      {@link org.infogrid.jee.taglib.logic.NotMatchTag NotMatchTag} processes its content
      if a <code>PropertyValue</code>'s String representation does not match a regular expression.</p>
   <p>The String representation is created by method <code>PropertyValue.toStringOrNull()</code>.
      The regular expression is a valid Java regular expression that can be compiled using
      <code>Pattern.compile(String)</code>.</p>
   
   <p>The following tag attributes are provided:</p>
   <table class="infogrid-border">
    <thead>
     <tr>
      <th width="15%">Attribute</th>
      <th width="60%">Meaning</th>
      <th>Required?</th>
     </tr>
    </thead>
    <tbody>
     <tr>
      <td><code>meshObjectName</code></td>
      <td>Name of the bean in the scope whose property is used in the match. Must be a <code>MeshObject</code>.</td>
      <td>required</td>
     </tr>
     <tr>
      <td><code>propertyTypeName</code></td>
      <td>Name of the bean in the scope that identifies the property. Must be a <code>PropertyType</code>.</td>
      <td>mutually exclusive with <code>propertyType</code></td>
     </tr>
     <tr>
      <td><code>propertyType</code></td>
      <td>Name of the property. Must be a String.</td>
      <td>mutually exclusive with <code>propertyTypeName</code></td>
     </tr>
     <tr>
      <td><code>expression</code></td>
      <td>String representation of the expression to match.</td>
      <td>required</td>
     </tr>
     <tr>
      <td><code>filter</code></td>
      <td>If true, filter output for characters that are sensitive in HTML.</td>
      <td>optional</td>
     </tr>
     <tr>
      <td><code>ignore</code></td>
      <td>If true, ignore missing beans and simply output nothing. Otherwise, when beans are missing,
          throw a <code>JspException</code></td>
      <td>optional</td>
     </tr>
     <tr>
      <td><code>scope</code></td>
      <td>The scope (page, request, session, application) in which beans are being looked up</td>
      <td>optional</td>
     </tr>
    </tbody>
   </table>   
   
   <h1>Tags evaluating the type of a <code>MeshObject</code></h1>
   <p>{@link org.infogrid.jee.taglib.logic.IfTypeTag IfTypeTag} processes its content
      if a <code>MeshObject</code>is currently blessed by a certain <code>EntityType</code>;
      it may or may not be blessed with other <code>EntityTypes</code>.
      {@link org.infogrid.jee.taglib.logic.NotIfTypeTag NotIfTypeTag} processes its content
      if a <code>MeshObject</code>currently is not blessed by a certain <code>EntityType</code>;
      it may or may not be blessed with other <code>EntityTypes</code>.</p>
   
   <p>The following tag attributes are provided:</p>
   <table class="infogrid-border">
    <thead>
     <tr>
      <th width="15%">Attribute</th>
      <th width="60%">Meaning</th>
      <th>Required?</th>
     </tr>
    </thead>
    <tbody>
     <tr>
      <td><code>meshObjectName</code></td>
      <td>Name of the bean in the scope whose property is used in the match. Must be a <code>MeshObject</code>.</td>
      <td>required</td>
     </tr>
     <tr>
      <td><code>identifier</code></td>
      <td>String representation of the Identifier of the <code>EntityType</code> against which the <code>MeshObject</code>'s
          types are checked.</td>
      <td>required</td>
     </tr>
     <tr>
      <td><code>filter</code></td>
      <td>If true, filter output for characters that are sensitive in HTML.</td>
      <td>optional</td>
     </tr>
     <tr>
      <td><code>ignore</code></td>
      <td>If true, ignore missing beans and simply output nothing. Otherwise, when beans are missing,
          throw a <code>JspException</code></td>
      <td>optional</td>
     </tr>
     <tr>
      <td><code>scope</code></td>
      <td>The scope (page, request, session, application) in which beans are being looked up</td>
      <td>optional</td>
     </tr>
    </tbody>
   </table>
  </body>
</html>
