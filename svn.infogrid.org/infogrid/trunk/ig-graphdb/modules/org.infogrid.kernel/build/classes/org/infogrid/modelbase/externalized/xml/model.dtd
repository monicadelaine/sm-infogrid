<?xml version="1.0" encoding="utf-8"?>
<!--
    This file is part of InfoGrid(tm). You may not use this file except in
    compliance with the InfoGrid license. The InfoGrid license and important
    disclaimers are contained in the file LICENSE.InfoGrid.txt that you should
    have received with InfoGrid. If you have not received LICENSE.InfoGrid.txt
    or you do not consent to all aspects of the license and the disclaimers,
    no license is granted; do not use this file.

    For more information about InfoGrid go to http://infogrid.org/

    Copyright 1998-2010 by R-Objects Inc. dba NetMesh Inc., Johannes Ernst
    All rights reserved.
  -->

<!-- DTD for the InfoGrid Model XML format -->

<!--
    Top-level element of a Model XML file. It has no attributes, and must contain one subjectarea.
  -->
<!ELEMENT model (
    subjectarea
)>

<!--
    Defines a SubjectArea.

    Its contained elements are:
        name:                       required    computer-interpreted name of the SubjectArea
        username:                   optional    zero or more internationalizable names of the SubjectArea that can be shown to a human reader
        userdescription:            optional    zero or more internationalizable descriptions of the SubjectArea that can be shown to a human reader
        version:                    optional    version of the SubjectArea
        dependson:                  optional    collects dependencies on other Modules, if any
        codegen:                    optional    instructions for the CodeGenerator
        entitytype:
         | relationshiptype:        required    The EntityTypes and RelationshipTypes defined in this Model. At least one must be given.

    Its attributes are:
        ID                          recommended unique identifier for the SubjectArea
  -->
<!ELEMENT subjectarea (
    name,
    username*,
    userdescription*,
    version?,
    dependson?,
    codegen?,
    ( entitytype | relationshiptype )+
)>
<!ATTLIST subjectarea
    ID ID #IMPLIED
>

<!--
    Captures dependencies of a SubjectArea.

    Its contained elements are:
        modulerequirement
        | subjectareareference:     required    Specifies the Modules or SubjectAreas that this SubjectArea depends on.
  -->
<!ELEMENT dependson (
    ( modulerequirement | subjectareareference )+
)>

<!--
    A dependency on another SubjectArea.

    Its contained elements are:
        name:                       required    computer-interpreted name of the required SubjectArea
        minversion:                 optional    minimum version of the required SubjectArea
  -->
<!ELEMENT subjectareareference (
    name,
    minversion?
)>

<!--
    A dependency on another Module.

    Its contained elements are:
        name:                       required    computer-interpreted name of the required Module
        minversion:                 optional    minimum version of the required Module

    There are no attributes.
  -->
<!ELEMENT modulerequirement (
    name,
    minversion?
)>

<!--
    Defines an EntityType.

    Its contained elements are:
        name:                       required    computer-interpreted name of the EntityType
        username:                   optional    zero or more internationalizable names of the EntityType that can be shown to a human reader
        userdescription:            optional    zero or more internationalizable descriptions of the EntityType that can be shown to a human reader
        icon:                       optional    icon used to show this EntityType to the user
        supertype:                  optional    identifiers of zero or more EntityTypes that are the supertypes of the EntityType
        synonym:                    optional    zero or more synonym identifiers for this EntityType
        overridecode:               optional    code inserted into the generated code
        iabstract:                  optional    if given, indicates that the EntityType is abstract
        issignificant:              optional    if given, indicates that this EntityType is semantically significant
        forwardreference:           optional    if given, indicates that this EntityType may be used as a ForwardReference
        codegen:                    optional    instructions for the CodeGenerator
        additionalinterface:        optional    names of additional Java interfaces implemented by the generated code
        propertytype
          | projectedpropertytype
          | propertytypegroup:      optional    defines the PropertyTypes of the EntityType

    Its attributes are:
        ID                          recommended unique identifier for the EntityType
  -->
<!ELEMENT entitytype (
    name,
    username*,
    userdescription*,
    icon?,
    supertype*,
    synonym*,
    overridecode?,
    isabstract?,
    issignificant?,
    forwardreference?,
    codegen?,
    additionalinterface*,
    ( propertytype | projectedpropertytype | propertytypegroup )*
)>
<!ATTLIST entitytype
    ID ID #IMPLIED
>

<!--
    Defines a RelationshipType.

    Its contained elements are:
        name:                       required    computer-interpreted name of the RelationshipType
        username:                   optional    zero or more internationalizable names of the RelationshipType that can be shown to a human reader
        userdescription:            optional    zero or more internationalizable descriptions of the RelationshipType that can be shown to a human reader
        src:                                    specifies the source of the RelationshipType, in case of a directed RelationshipType
        dest:                                   specifies the destination of the RelationshipType, in case of a directed RelationshipType
        srcdest:                                specifies the source-destination of the RelationshipType, in case of a non-directed RelationshipType
        iabstract:                  optional    if given, indicates that the RelationshipType is abstract
        codegen:                    optional    instructions for the CodeGenerator
        propertytype:               optional    defines the PropertyTypes of the RelationshipType

    Its attributes are:
        ID                          recommended unique identifier for the RelationshipType
 -->
<!ELEMENT relationshiptype (
    name,
    username*,
    userdescription*,
    (( src, dest ) | srcdest ),
    isabstract?,
    codegen?,
    propertytype*
)>
<!ATTLIST relationshiptype
    ID ID #IMPLIED
>

<!--
    Defines a PropertyType.

    Its contained elements are:
        name:                       required    computer-interpreted name of the PropertyType
        username:                   optional    zero or more internationalizable names of the PropertyType that can be shown to a human reader
        userdescription:            optional    zero or more internationalizable descriptions of the PropertyType that can be shown to a human reader
        tooverride:                 optional    identifiers of zero or more PropertyTypes overridden in this subtype
        datatype:                   required    the DataType of the PropertyType
        defaultvalue:                           the default value for instances of this PropertyType. Must be given if isoptional is not given.
        isoptional:                 optional    if given, null values are allowed in instances of this PropertyType
        isreadonly:                 optional    if given, new values cannot be set for instances of this PropertyType
        codegen:                    optional    instructions for the CodeGenerator
        sequencenumber:             optional    helps the ordering of Properties when the enclosing instance is shown to the user

    Its attributes are:
        ID                          recommended unique identifier for the PropertyType
 -->
<!ELEMENT propertytype (
    name,
    username*,
    userdescription*,
    tooverride*,
    datatype,
    defaultvalue?,
    isoptional?,
    isreadonly?,
    codegen?,
    sequencenumber?
)>
<!ATTLIST propertytype
    ID ID #IMPLIED
>

<!--
    Defines a ProjectedPropertyType.

    Its contained elements are:
        name:                       required    computer-interpreted name of the ProjectedPropertyType
        username:                   optional    zero or more internationalizable names of the ProjectedPropertyType that can be shown to a human reader
        userdescription:            optional    zero or more internationalizable descriptions of the ProjectedPropertyType that can be shown to a human reader
        tooverride:                 optional    identifiers of zero or more PropertyTypes overridden in this subtype
        datatype:                   required    the DataType of the ProjectedPropertyType
        defaultvalue:                           the default value for the Property. Must be given if isoptional is not given.
        isoptional:                 optional    if given, null values are allowed in instances of this ProjectedPropertyType
        isreadonly:                 optional    if given, new values cannot be set for instances of this PropertyType
        inputpropertyspecification: optional    captures which Properties to monitor to calculate a new value for the ProjectedProperty at the right time
        projectioncode:             optional    the code that calculates the value of the instance of the ProjectedPropertyType
        codegen:                    optional    instructions for the CodeGenerator
        sequencenumber:             optional    helps the ordering of Properties when the enclosing instance is shown to the user

    Its attributes are:
        ID                          recommended unique identifier for the ProjectedPropertyType
 -->

<!ELEMENT projectedpropertytype (
    name,
    username*,
    userdescription*,
    tooverride*,
    datatype,
    defaultvalue?,
    isoptional?,
    isreadonly?,
    inputpropertyspecification*,
    projectioncode?,
    codegen?,
    sequencenumber?
)>
<!ATTLIST projectedpropertytype
    ID ID #IMPLIED
>

<!--
    Defines a PropertyTypeGroup.

    Its contained elements are:
        name:                       required    computer-interpreted name of the PropertyTypeGroup
        username:                   optional    zero or more internationalizable names of the PropertyTypeGroup that can be shown to a human reader
        userdescription:            optional    zero or more internationalizable descriptions of the PropertyTypeGroup that can be shown to a human reader
        propertytypegroupmember:    required    the members of the PropertyTypeGroup
        sequencenumber:             optional    helps the ordering of PropertyTypeGroups when the enclosing instance is shown to the user

    Its attributes are:
        ID                          recommended unique identifier for the ProjectedPropertyType
 -->
<!ELEMENT propertytypegroup (
    name,
    username*,
    userdescription*,
    propertytypegroupmember+,
    sequencenumber?
)>
<!ATTLIST propertytypegroup
    ID ID #IMPLIED
>

<!--
    Identifies one member of a PropertyTypeGroup.

    There are no contained elements.

    Its attributes are:
        ID                          required    identifier of the PropertyType that is the member of this PropertyTypeGroup
  -->
<!ELEMENT propertytypegroupmember EMPTY>
<!ATTLIST propertytypegroupmember
    ID ID #REQUIRED
>

<!--
    Captures which Properties are monitored to update a ProjectedProperty at the right time.

    Its contained elements are:
        traversalspecification:     optional    the TraversalSpecification to reach the MeshObject carrying the to-be-monitored Property
        propertytypereference:      optional    identifier of the PropertyType to be monitored. If none are given, it means "all".

    There are no attributes.
  -->
<!ELEMENT inputpropertyspecification (
    traversalspecification?,
    propertytypereference*
)>

<!--
    A TraversalSpecification.

    Its contained elements are:
        sequentialtraversalspecification:       a TraversalSpecification composed of other TraversalSpecifications to be traversed in sequence
         | selectivetraversalspecification:     subsets the result of a TraversalSpecification through a selector
         | roletypereference                    traverse a RoleType

    There are no attributes.
  -->
<!ELEMENT traversalspecification (
    sequentialtraversalspecification
     | selectivetraversalspecification
     | roletypereference
)>

<!--
    A SequentialTraversalSpecification.

    Its contained elements are:
        traversalspecification      >= 2        identifiers of the TraversalSpecifications to be traversed in sequence

    There are no attributes.
  -->
<!ELEMENT sequentialtraversalspecification (
    traversalspecification+
)>

<!--
    A SelectiveTraversalSpecification.

    Its contained elements are:
        traversalspecification      required    identifier of the TraversalSpecification to be traversed
        meshobjectselector          required    the MeshObjectSelector to use after the traversal to select

    There are no attributes.
  -->
<!ELEMENT selectivetraversalspecification (
    traversalspecification,
    meshobjectselector
)>

<!--
    Contains a MeshObjectSelector.

    Its contained elements are:
        bytypemeshobjectselector    required    currently, only the ByTypeMeshObjectSelector is supported.

    There are no attributes.
  -->
<!ELEMENT meshobjectselector (
    bytypemeshobjectselector
)>

<!--
    Represents a ByTypeMeshObjectSelector.

    There are no contained elements.

    Its attributes are:
        ID                          required    identifier of the EntityType that is required for selector match
        subtypeallowed              optional    if given, the selector matches subtypes of the EntityType in addition to the EntityType itself
  -->
<!ELEMENT bytypemeshobjectselector EMPTY>
<!ATTLIST bytypemeshobjectselector
    ID             ID    #REQUIRED
    subtypeallowed CDATA #IMPLIED
>

<!--
    References a PropertyType.

    There are no contained elements.

    Its attributes are:
        ID                          required    identifier of the PropertyType
  -->
<!ELEMENT propertytypereference EMPTY>
<!ATTLIST propertytypereference
    ID             ID    #IMPLIED
>

<!--
    References a RoleType.

    There are no contained elements.

    Its attributes are:
        ID                          required    identifier of the RoleType
  -->
<!ELEMENT roletypereference EMPTY>
<!ATTLIST roletypereference
    ID             ID    #IMPLIED
>

<!--
    A computer-interpreted name that acts as identifier.
    
    Contains the name as text.
    
    There are no attributes.
  -->
<!ELEMENT name (
    #PCDATA
)>

<!--
    The version minimally required.

    Contains the version as text.

    There are no attributes.
  -->
<!ELEMENT minversion (
    #PCDATA
)>

<!--
    The version.

    Contains the version as text.

    There are no attributes.
  -->
<!ELEMENT version (
    #PCDATA
)>

<!--
    Internationalizable name that can be shown to a human reader.

    Contains the name as text.

    Its attributes are:
        locale                      optional    identifier for the locale in which the username is given
  -->
<!ELEMENT username (
    #PCDATA
)>
<!ATTLIST username
    locale       CDATA #IMPLIED
>

<!--
    Internationalizable description that can be shown to a human reader.

    Contains the description as text.

    Its attributes are:
        locale                      optional    identifier for the locale in which the userdescription is given
  -->
<!ELEMENT userdescription (
    #PCDATA
)>
<!ATTLIST userdescription
    locale       CDATA #IMPLIED
>

<!--
    Identifier of a supertype.

    Contains the identifier as text.

    There are no attributes.
  -->
<!ELEMENT supertype (
    #PCDATA
)>

<!--
    A synonym identifier.
    
    Contains the synonym identifier as text.
    
    There are no attributes.
  -->
<!ELEMENT synonym (
    #PCDATA
)>

<!--
    Code fragment that overrides generated code.

    Contains the code as text.

    There are no attributes.
  -->
<!ELEMENT overridecode (
    #PCDATA
)>

<!--
    Code fragment that defines the projection algorithm for a ProjectedProperty.

    Contains the code as text.

    There are no attributes.
  -->
<!ELEMENT projectioncode (
    #PCDATA
)>

<!--
    Indicates that an EntityType or RelationshipType is abstract.

    There are no contained elements.

    There are no attributes.
  -->
<!ELEMENT isabstract EMPTY>

<!--
    Indicates that instances of a PropertyType can hold null values.

    There are no contained elements.

    There are no attributes.
  -->
<!ELEMENT isoptional EMPTY>

<!--
    Indicates that instances of a PropertyType can only be read, not written.

    There are no contained elements.

    There are no attributes.
  -->
<!ELEMENT isreadonly EMPTY>

<!--
    Indicates that instances of an EntityType are semantically significant.

    There are no contained elements.

    There are no attributes.
  -->
<!ELEMENT issignificant EMPTY>

<!--
    Indicates that this EntityType may be used as an EntityType for a ForwardReference, even if it is abstract.

    There are no contained elements.

    There are no attributes.
  -->
<!ELEMENT forwardreference EMPTY>

<!--
    Fully-qualified name of a Java interface that is also supported by the generated code for this EntityType.

    Contains the fully-qualified name of a Java interface.

    There are no attributes.
  -->
<!ELEMENT additionalinterface (
    #PCDATA
)>

<!--
    Instructions for the code generator.

    There are no contained elements.

    Its attributes are:
        interface                   optional    if value is "false", do not generate the Java interface
        implementation              optional    if value of "false", do not generate the Java implementation
  -->
<!ELEMENT codegen EMPTY>
<!ATTLIST codegen
    interface      CDATA #IMPLIED
    implementation CDATA #IMPLIED
>

<!--
    Identifies the DataType of a PropertyType.

    Contains exactly one DataType from the set of InfoGrid DataTypes.

    There are no attributes.
  -->
<!ELEMENT datatype (
    BlobDataType
     | BooleanDataType
     | ColorDataType
     | CurrencyDataType
     | EnumeratedDataType
     | ExtentDataType
     | FloatDataType
     | IntegerDataType
     | MultiplicityDataType
     | PointDataType
     | StringDataType
     | TimePeriodDataType
     | TimeStampDataType
)>

<!--
    The default value of a PropertyType.

    Contains either the default value as string, or a code fragment to calculate the default value.
    This depends on the value of the "code" attribute.

    Its attributes are:
        code                        optional    if "true", this contains code instead of the default value directly
  -->
<!ELEMENT defaultvalue (
    #PCDATA
)>
<!ATTLIST defaultvalue
    code         CDATA #IMPLIED
>

<!--
    Encapsulates the specification for the source RoleType of a directed RelationshipType.

    Its contained elements are:
        username:                   optional    internationalizable name for the RoleType that can be shown to the user
        e:                          optional    identifier of the required EntityType for this role, if any
        refines:                    optional    identifiers of the RoleTypes that this RoleType refines
        MultiplicityValue:          required    allowed multiplicities of this RoleType

    There are no attributes.
  -->
<!ELEMENT src (
    username*,
    e?,
    refines*,
    MultiplicityValue
)>

<!--
    Encapsulates the specification for the destination RoleType of a directed RelationshipType.

    Its contained elements are:
        username:                   optional    internationalizable name for the RoleType that can be shown to the user
        e:                          optional    identifier of the required EntityType for this role, if any
        refines:                    optional    identifiers of the RoleTypes that this RoleType refines
        MultiplicityValue:          required    allowed multiplicities of this RoleType

    There are no attributes.
  -->
<!ELEMENT dest (
    username*,
    e?,
    refines*,
    MultiplicityValue
)>

<!--
    Encapsulates the specification for the RoleType of an undirected RelationshipType.

    Its contained elements are:
        username:                   optional    internationalizable name for the RoleType that can be shown to the user
        e:                          optional    identifier of the required EntityType for this role, if any
        refines:                    optional    identifiers of the RoleTypes that this RoleType refines
        MultiplicityValue:          required    allowed multiplicities of this RoleType

    There are no attributes.
  -->
<!ELEMENT srcdest (
    username*,
    e?,
    refines*,
    MultiplicityValue
)>

<!--
    Identifier of the EntityType that is required for a Role.

    Contains the identifier of the EntityType as text.

    There are no attributes.
  -->
<!ELEMENT e (
    #PCDATA
)>

<!--
    Identifier of a RoleType that is refined by the current RoleType.

    Contains the identifier of the RoleType as text.

    There are no attributes.
  -->
<!ELEMENT refines (
    #PCDATA
)>

<!--
    Identifier of a PropertyType that is refined by the current PropertyType.

    Contains the identifier of the PropertyType as text.

    There are no attributes.
  -->
<!ELEMENT tooverride (
    #PCDATA
)>

<!--
    A sequence number.
    
    Contains the sequence number as text.
    
    There are no attributes.
  -->
<!ELEMENT sequencenumber (
    #PCDATA
)>

<!--
    An icon.
    
    There are no contained elements.
    
    Its attributes are:
        path                        required    path name of the icon, relative to generated code's class loader
  -->
<!ELEMENT icon EMPTY>
<!ATTLIST icon
    path         CDATA #REQUIRED
>

<!--
    Specifies a BlobDataType.

    There are no contained elements.

    Its attributes are:
        typefield                   optional    name of the static member variable, defined in BlobDataType, that holds the correct instance of BlobDataType.
  -->
<!ELEMENT BlobDataType EMPTY>
<!ATTLIST BlobDataType
    typefield CDATA #IMPLIED
>

<!--
    Specifies the BooleanDataType.

    There are no contained elements.

    There are no attributes.
  -->
<!ELEMENT BooleanDataType EMPTY>

<!--
    Specifies the ColorDataType.

    There are no contained elements.

    There are no attributes.
  -->
<!ELEMENT ColorDataType EMPTY>

<!--
    Specifies a CurrencyDataType.

    There are no contained elements.

    Its attributes are:
        typefield                   optional    name of the static member variable, defined in CurrencyDataType, that holds the correct instance of CurrencyDataType.
  -->
<!ELEMENT CurrencyDataType EMPTY>
<!ATTLIST CurrencyDataType
    typefield CDATA #IMPLIED
>

<!--
    Specifies an EnumeratedDataType.

    Its contained elements are:
        enum:                       required    the values that constitute the domain of the EnumeratedDataType.

    There are no attributes.
  -->
<!ELEMENT EnumeratedDataType (
    enum+
)>

<!--
    Specifies the ExtentDataType.

    There are no contained elements.

    There are no attributes.
  -->
<!ELEMENT ExtentDataType EMPTY>

<!--
    Specifies a FloatDataType.

    There are no contained elements.

    Its attributes are:
        typefield                   optional    name of the static member variable, defined in FloatDataType, that holds the correct instance of FloatDataType.
  -->
<!ELEMENT FloatDataType EMPTY>
<!ATTLIST FloatDataType
    typefield CDATA #IMPLIED
>

<!--
    Specifies an IntegerDataType.

    There are no contained elements.

    Its attributes are:
        typefield                   optional    name of the static member variable, defined in IntegerDataType, that holds the correct instance of IntegerDataType.
  -->
<!ELEMENT IntegerDataType      EMPTY>
<!ATTLIST IntegerDataType
    typefield CDATA #IMPLIED
>

<!--
    Specifies the MultiplicityDataType.

    There are no contained elements.

    There are no attributes.
  -->
<!ELEMENT MultiplicityDataType EMPTY>

<!--
    Specifies the PointDataType.

    There are no contained elements.

    There are no attributes.
  -->
<!ELEMENT PointDataType EMPTY>

<!--
    Specifies the StringDataType.

    Its contained elements are:
        regex:                      optional    a regular expression that StringValues must conform to.

    There are no attributes.
  -->
<!ELEMENT StringDataType (
    regex?,
    defaultvalue
)>

<!--
    Specifies the TimePeriodDataType.

    There are no contained elements.

    There are no attributes.
  -->
<!ELEMENT TimePeriodDataType EMPTY>

<!--
    Specifies the TimeStampDataType.

    There are no contained elements.

    There are no attributes.
  -->
<!ELEMENT TimeStampDataType EMPTY>

<!--
    One enumerated value for an EnumeratedDataType.

    Its contained elements are:
        name:                       required    computer-interpreted name of the value
        username:                   optional    zero or more internationalizable names of the value that can be shown to a human reader
        userdescription:            optional    zero or more internationalizable descriptions of the value that can be shown to a human reader

    There are no attributes.
  -->
<!ELEMENT enum (
    name,
    username*,
    userdescription*
)>

<!--
    The regular expression for a StringDataType.

    Contains the regular expression as text.

    There are no attributes.
  -->
<!ELEMENT regex (
    #PCDATA
)>

<!--
    A MultiplicityValue.

    Contains the MultiplicityValue in string form.

    There are no attributes.
  -->
<!ELEMENT MultiplicityValue (
    #PCDATA
)>
