<!--
    This file is part of InfoGrid(tm). You may not use this file except in
    compliance with the InfoGrid license. The InfoGrid license and important
    disclaimers are contained in the file LICENSE.InfoGrid.txt that you should
    have received with InfoGrid. If you have not received LICENSE.InfoGrid.txt
    or you do not consent to all aspects of the license and the disclaimers,
    no license is granted; do not use this file.
 
    For more information about InfoGrid go to http://infogrid.org/

    Copyright 1998-2010 by R-Objects Inc. dba NetMesh Inc., Johannes Ernst
    All rights reserved.
-->

<project name="infogrid-ant-functions" default="none" xmlns:j2seproject1="http://www.netbeans.org/ns/j2se-project/1">

  <property name="classpath.moduleadvertisementserializer"
            value="${infogrid.org}/ig-utils/modules/org.infogrid.module.moduleadvertisementserializer/dist/org.infogrid.module.moduleadvertisementserializer.jar:${infogrid.org}/ig-utils/modules/org.infogrid.module/dist/org.infogrid.module.jar:${infogrid.org}/ig-utils/modules/org.infogrid.util/dist/org.infogrid.util.jar"/>
  <property name="class.moduleadvertisementserializer"
            value="org.infogrid.module.moduleadvertisementserializer.ModuleAdvertisementSerializer"/>

  <property name="classpath.bootloader"
            value="${infogrid.org}/ig-utils/modules/org.infogrid.module/dist/org.infogrid.module.jar:${infogrid.org}/ig-utils/modules/org.infogrid.module.commandline/dist/org.infogrid.module.commandline.jar"/>
  <property name="class.bootloader"
            value="org.infogrid.module.commandline.CommandlineBootLoader"/>

  <property name="webapp.path" value="/${ant.project.name}" /> <!-- default -->

  <target name="-module-setup"
          depends="-module-setup-analyse,-module-setup-check,-module-setup-ads,-module-setup-models"/>

  <target name="-module-setup-analyse">
    <mkdir dir="${build.dir}/module-generated/infogrid-moduleads"/>
    <condition property="thismodule.generate.ads" value="true">
      <and>
        <available file="infogrid-moduleads/module.adv"/>
        <not>
          <uptodate  srcfile="infogrid-moduleads/module.adv" targetfile="${build.dir}/module-generated.touch"/>
        </not>
      </and>
    </condition>
    <condition property="thismodule.generate.models" value="true">
      <and>
        <available file="infogrid-models/model.xml"/>
        <not>
          <uptodate  srcfile="infogrid-models/model.xml" targetfile="${build.dir}/module-generated.touch"/>
        </not>
      </and>
    </condition>
    <condition property="thismodule.generate.both" value="true">
      <and>
        <istrue value="${thismodule.generate.ads}"/>
        <istrue value="${thismodule.generate.models}"/>
      </and>
    </condition>
    <condition property="available.class.bootloader" value="true">
        <available classname="${class.bootloader}" classpath="${classpath.bootloader}"/>
    </condition>
    <condition property="available.class.moduleadvertisementserializer" value="true">
        <available classname="${class.moduleadvertisementserializer}" classpath="${classpath.moduleadvertisementserializer}"/>
    </condition>
  </target>
  
  <target name="-module-setup-check" if="thismodule.generate.both">
    <fail message="Both infogrid-moduleads/module.adv and infogrid-models/model.xml given."/>
  </target>
  
  <target name="-module-setup-ads" if="thismodule.generate.ads">
    <!-- if you change this, note that virtually the same code also exists in the -module-setup-models target -->
    <fail unless="available.class.moduleadvertisementserializer"
          message="ModuleAdvertisementSerializer not available. Compile first."/>

    <java fork="true" failonerror="true" classname="${class.moduleadvertisementserializer}">
      <arg value="-xml"/>
      <arg value="infogrid-moduleads/module.adv"/>
      <arg value="${build.dir}/module-generated/infogrid-moduleads"/>
      <classpath path="${classpath.moduleadvertisementserializer}"/>
    </java>
    <java fork="true" failonerror="true" classname="${class.moduleadvertisementserializer}">
      <arg value="-ser"/>
      <arg value="infogrid-moduleads/module.adv"/>
      <arg value="${build.dir}/module-generated/infogrid-moduleads"/>
      <classpath path="${classpath.moduleadvertisementserializer}"/>
    </java>
    <java fork="true" failonerror="true" classname="${class.moduleadvertisementserializer}">
      <arg value="-java"/>
      <arg value="infogrid-moduleads/module.adv"/>
      <arg value="${build.dir}/module-generated"/>
      <classpath path="${classpath.moduleadvertisementserializer}"/>
    </java>
    <copy todir="${dist.dir}">
      <fileset dir="${build.dir}/module-generated/infogrid-moduleads">
        <include name="*.adv"/>
        <include name="*.ser"/>
      </fileset>
    </copy>
    <xslt in="infogrid-moduleads/module.adv"
          out="${build.dir}/module-description.html"
          style="${infogrid.org.tools}/module-to-module-description.xsl">
      <xmlcatalog>
        <dtd publicId="-//InfoGrid.org//InfoGrid Model//EN"
             location="${infogrid.org}/ig-utils/modules/org.infogrid.module/src/org/infogrid/module/module.dtd"/>
      </xmlcatalog>
    </xslt>
    <touch file="${build.dir}/module-generated.touch"/>
  </target>
    
  <target name="-module-setup-models" if="thismodule.generate.models">
    <!-- if you change this, note that virtually the same code also exists in the -module-setup-ads target -->
    <fail unless="available.class.moduleadvertisementserializer"
          message="ModuleAdvertisementSerializer not available. Compile first."/>
    <fail unless="available.class.bootloader"
          message="Module frameworks' BootLoader not available. Compile first."/>

    <mkdir dir="${build.dir}/module-generated/infogrid-models"/>
    <mkdir dir="${build.dir}/module-generated/infogrid-moduleads"/>

    <copy file="infogrid-models/model.xml" tofile="${build.dir}/module-generated/infogrid-models/${ant.project.name}.V.xml"/>
    <copy file="infogrid-models/model.xml" tofile="${dist.dir}/${ant.project.name}.V.xml"/>

    <xslt in="infogrid-models/model.xml"
          out="${build.dir}/module-from-model.adv"
          style="${infogrid.org.tools}/model-to-adv.xsl">
      <xmlcatalog>
        <dtd publicId="-//InfoGrid.org//InfoGrid Model//EN"
             location="${infogrid.org}/ig-graphdb/modules/org.infogrid.kernel/src/org/infogrid/modelbase/externalized/xml/model.dtd"/>
      </xmlcatalog>
    </xslt>
    <xslt in="infogrid-models/model.xml"
          out="${build.dir}/module-description.html"
          style="${infogrid.org.tools}/model-to-module-description.xsl">
      <xmlcatalog>
        <dtd publicId="-//InfoGrid.org//InfoGrid Model//EN"
             location="${infogrid.org}/ig-graphdb/modules/org.infogrid.kernel/src/org/infogrid/modelbase/externalized/xml/model.dtd"/>
      </xmlcatalog>
    </xslt>

    <java fork="true" failonerror="true" classname="${class.moduleadvertisementserializer}">
      <arg value="-xml"/>
      <arg value="${build.dir}/module-from-model.adv"/>
      <arg value="${build.dir}/module-generated/infogrid-moduleads"/>
      <classpath path="${classpath.moduleadvertisementserializer}"/>
    </java>
    <java fork="true" failonerror="true" classname="${class.moduleadvertisementserializer}">
      <arg value="-ser"/>
      <arg value="${build.dir}/module-from-model.adv"/>
      <arg value="${build.dir}/module-generated/infogrid-moduleads"/>
      <classpath path="${classpath.moduleadvertisementserializer}"/>
    </java>
    <java fork="true" failonerror="true" classname="${class.moduleadvertisementserializer}">
      <arg value="-java"/>
      <arg value="${build.dir}/module-from-model.adv"/>
      <arg value="${build.dir}/module-generated"/>
      <classpath path="${classpath.moduleadvertisementserializer}"/>
    </java>

    <copy todir="${dist.dir}">
      <fileset dir="${build.dir}/module-generated/infogrid-moduleads">
        <include name="*.adv"/>
        <include name="*.ser"/>
      </fileset>
    </copy>

    <java classname="${class.bootloader}"
          classpath="${classpath.bootloader}"
          failonerror="true" fork="yes">
      <arg value="-rootmodule"/>
      <arg value="org.infogrid.codegen"/>
      <arg value="-moduleadvertisementpath"/>
      <arg value="../../../*/*/*/dist/*.adv"/>
      <arg value="${ant.project.name}"/>
      <arg value="-o"/>
      <arg value="../${ant.project.name}/build/module-generated/"/>
    </java>
    <touch file="${build.dir}/module-generated.touch"/>
  </target>

<!-- We override fail-on-error -->
  <target name="-init-macrodef-java">
    <macrodef name="java" uri="http://www.netbeans.org/ns/j2se-project/1">
      <attribute default="${main.class}" name="classname"/>
      <element name="customize" optional="true"/>
      <sequential>
        <java classname="@{classname}" dir="${work.dir}" fork="true" failonerror="true">
          <jvmarg line="${run.jvmargs}"/>
          <classpath>
            <path path="${run.classpath}"/>
          </classpath>
          <syspropertyset>
            <propertyref prefix="run-sys-prop."/>
            <mapper from="run-sys-prop.*" to="*" type="glob"/>
          </syspropertyset>
          <customize/>
        </java>
      </sequential>
    </macrodef>
  </target>

<!-- override javadoc so we don't have to set the additional parameters in each module -->
  <target depends="init" name="-javadoc-build">
    <mkdir dir="${dist.javadoc.dir}"/>
    <javadoc additionalparam="${javadoc.additionalparam} -stylesheetfile ${infogrid.org.tools}/module-stylesheet.css -doctitle &quot;Module ${ant.project.name}&quot; -overview ${basedir}/${build.dir}/module-description.html"
                 author="${javadoc.author}"
                 charset="UTF-8"
                 destdir="${dist.javadoc.dir}"
                 docencoding="UTF-8"
                 encoding="${javadoc.encoding.used}"
                 failonerror="true"
                 noindex="${javadoc.noindex}"
                 nonavbar="${javadoc.nonavbar}"
                 notree="${javadoc.notree}"
                 private="${javadoc.private}"
                 source="${javac.source}"
                 splitindex="${javadoc.splitindex}"
                 use="${javadoc.use}"
                 useexternalfile="true"
                 version="${javadoc.version}"
                 windowtitle="${javadoc.windowtitle}">
      <classpath>
        <path path="${javac.classpath}"/>
      </classpath>
      <fileset dir="${src.dir}" excludes="${excludes}" includes="${includes}">
        <filename name="**/*.java"/>
      </fileset>
      <fileset dir="${src.module-generated.dir}" excludes="${excludes}" includes="${includes}">
        <filename name="**/*.java"/>
      </fileset>
    </javadoc>
  </target>

  <target depends="init" description="Run a main class." name="run" if="main.class.available">
    <j2seproject1:java>
      <customize>
        <arg line="${application.args}"/>
      </customize>
    </j2seproject1:java>
  </target>

<!-- override pre-init so it is easy to set up automated builds -->
  <target name="-pre-init" depends="read-build-properties,set-build-properties" />
  <target name="set-build-properties"/>

  <target name="read-build-properties" if="build.properties">
    <available file="${build.properties}" property="build-properties-present"/>
    <fail unless="build-properties-present" message="Build property file ${build.properties} not found."/>
    <property file="${build.properties}"/>
  </target>

  <path id="deployer.classpath">
    <fileset dir="${infogrid.org.vendors}/libraries/tomcat.apache.org/apache-tomcat-deployer/lib">
      <include name="*.jar"/>
    </fileset>
  </path>
<!--
  <taskdef resource="org/apache/catalina/ant/catalina.tasks"
           classpathref="deployer.classpath"/>
-->

  <target name="tomcat-deploy" depends="-pre-init" description="Deploy to Tomcat per current settings">
    <exec executable="pwd" outputproperty="pwd"/> <!-- stupid deploy task does not get the current directory right -->
    <deploy path="${webapp.path}"
            war="${pwd}/dist/${ant.project.name}.war"
            url="${tomcat.manager.url}"
            username="${tomcat.manager.user}"
            password="${tomcat.manager.password}"
            update="true" />
  </target>

  <target name="tomcat-undeploy" depends="-pre-init" description="Undeploy from Tomcat per current settings">
    <exec executable="pwd" outputproperty="pwd"/> <!-- stupid deploy task does not get the current directory right -->
    <undeploy path="${webapp.path}"
            url="${tomcat.manager.url}"
            username="${tomcat.manager.user}"
            password="${tomcat.manager.password}" />
  </target>
</project>
